# {{ ansible_managed  }}
ARG ARG_IMAGE_FROM={{ dockerfile_builder_image_from }}
FROM ${ARG_IMAGE_FROM}

# General variables
ENV IMAGE_NAME=ansible-podman-ci \
    IMAGE_SUMMARY="Podman image based on {{ dockerfile_builder_image_based }} for Continuous Integration" \
    IMAGE_DESCRIPTION="{{ dockerfile_builder_image_based }} based image with tools like Buildah and Skopeo, for CI" \
    IMAGE_TITLE="Ansible CI image based on {{ dockerfile_builder_image_based }}"

ENV BUILDAH_ISOLATION=chroot \
    BUILDAH_LAYERS=true \
    CONTAINER_BUILDER=podman

RUN echo "Installing podman..."  && \
    $CTR_PKG_MGM install xz gzip tar podman skopeo buildah && \
    rpm -e --nodeps container-selinux && \
    echo "Cleaning..."  && \
    $CTR_PKG_MGM clean all && \
    rm -rf /var/cache /var/log/dnf* /var/log/yum.*

COPY conf/etc/containers/containers.conf /etc/containers/containers.conf

{% if jx3_version is defined and jx3_version %}
ENV JX3_VERSION="{{ jx3_version }}"
ENV JX3_HOME=/home/.jx3
RUN echo "Installing jx3 version: ${JX3_VERSION}..."  && \
    pushd /tmp && \
    curl -L https://github.com/jenkins-x/jx-cli/releases/download/v${JX3_VERSION}/jx-cli-linux-$(uname -m | sed 's/x86_64/amd64/' | sed 's/aarch64/arm64/').tar.gz | tar xzv && \
    mv jx /usr/bin/{{ jx3_binary_name | default('jx') }} && \
    echo "Pre-load jx3 plugins..."  && \
    # {{ jx3_binary_name | default('jx') }} upgrade plugins --mandatory && \
    {{ jx3_binary_name | default('jx') }} gitops version && \
    echo "Cleaning..."  && \
    rm -rf /tmp/* && \
    popd

{% endif %}
{% if oras_version is defined and oras_version %}
ENV ORAS_VERSION="{{ oras_version }}"
RUN echo "Installing oras version: ${ORAS_VERSION}..."  && \
    pushd /tmp && \
    curl -L https://github.com/deislabs/oras/releases/download/v${ORAS_VERSION}/oras_${ORAS_VERSION}_linux_$(uname -m | sed 's/x86_64/amd64/' | sed 's/aarch64/arm64/').tar.gz | tar xzv && \
    mv oras /usr/bin/{{ oras_binary_name | default('oras') }} && \
    echo "Cleaning..."  && \
    rm -rf /tmp/* && \
    popd

{% endif %}
{% if pushrm_version is defined and pushrm_version %}
ENV PUSHRM_VERSION="{{ pushrm_version }}"
RUN echo "Installing pushrm version: ${PUSHRM_VERSION}..."  && \
    curl -L "https://github.com/christian-korneck/docker-pushrm/releases/download/v${PUSHRM_VERSION}/docker-pushrm_linux_$(uname -m | sed 's/x86_64/amd64/' | sed 's/aarch64/arm64/')" -o /usr/local/bin/{{ pushrm_binary_name | default('docker-pushrm') }} && \
    chmod +x /usr/local/bin/docker-pushrm

{% endif %}
CMD [ "/bin/bash" ]

# Labels
LABEL name="${IMAGE_NAME}" \
      summary="${IMAGE_SUMMARY}" \
      maintainer="{{ dockerfile_builder_image_authors }}" \
      description="${IMAGE_DESCRIPTION}" \
      org.opencontainers.image.title="${IMAGE_TITLE}" \
      org.opencontainers.image.authors="{{ dockerfile_builder_image_authors }}" \
      org.opencontainers.image.description="${IMAGE_DESCRIPTION}" \
      io.k8s.description="${IMAGE_DESCRIPTION}" \
      io.k8s.display-name="${IMAGE_TITLE}" \
      io.openshift.tags="${IMAGE_NAME},{{ dockerfile_builder_image_ocp_tags }}"
