#!/bin/bash -u
# description: check moodle nginx container

usage() {
    cat 1>&2 <<EOF
Script to check moodle nginx container.

ENVIRONMENT VARS:
PHP_FPM_CHECK_SOCKET    socket php-fpm listen to
MOODLE_DATA             moodledata path
MOODLE_CHECK_PATH       path from url to check ex. "/index.php"
MOODLE_CHECK_URL        optionally use a complete url instead of path
MOODLE_CHECK_CODE       http status code to expect
MOODLE_CHECK_HOST       set a host header

USAGE:
    check-container-nginx-moodle [OPTIONS]

OPTIONS (check moodle nginx container):
  -l            check liveness (-n)
  -m            check if moodledata is writable
  -n            check socket nginx listen to
  -p            check socket php-fpm listen to
  -r            check readiness (-m -n -p)
  -s            check startup (-m -n -p -u)
  -u            check url

EXAMPLES:
    /usr/libexec/check-container-nginx-moodle -s
    /usr/libexec/check-container-nginx-moodle -r
    /usr/libexec/check-container-nginx-moodle -l
EOF
}

check_socket() {
    # check tcp socket
    CHECK_SOCKET=${1}
    CHECK_SOCKET_NAME=${2}
    CHECK_SOCKET_TIMEOUT=${3:-2.8}
    # if not using unix socket
    if [[ ${CHECK_SOCKET} != /* ]]; then
        # extra host and port from var
        # default host to 127.0.0.1 if no ":"
        socket_host="127.0.0.1"
        [[ $CHECK_SOCKET == *":"* ]] && socket_host="${CHECK_SOCKET%%:*}"
        socket_port="${CHECK_SOCKET#*:}"
        nc -z -w ${CHECK_SOCKET_TIMEOUT} ${socket_host} ${socket_port}
        if [ $? -ne 0 ]; then
            echo "$0: CHECK: error checking ${CHECK_SOCKET_NAME} tcp socket '${socket_host}:${socket_port}'"
            exit 1
        fi
    else
        echo "$0: CHECK: ${CHECK_SOCKET_NAME} is using unix socket"
    fi
}

check_moodledata_readable() {
    # check moodledata is readable
    if ! [ -r "${MOODLE_DATA}" ]; then
        echo "CHECK: Can't read dir '${MOODLE_DATA}'"
        exit 1
    fi
}

check_maintenance() {
    # check if moodle is in maintenance
    if ! [ -z ${MOODLE_DATA} ] ; then
        moodle_maintenance=$(test -f "${MOODLE_DATA}/climaintenance.html" && echo true || echo false)
        if [ "${moodle_maintenance}" == "true" ]; then
            echo "$0: CHECK: moodle maintenance detected"
        fi
    fi
}

check_moodle_url() {
    # check url for http status code
    check_moodle_url="${MOODLE_CHECK_URL:-127.0.0.1:${NGINX_PORT}${MOODLE_CHECK_PATH}}"
    ## check if moodle is in maintenance
    check_maintenance
    ## if moodle is in maintenance, allow 503 http status code
    if [ "${moodle_maintenance}" == "true" ]; then
        MOODLE_CHECK_CODE="${MOODLE_CHECK_CODE}\|503"
    fi
    ## check http code
    status_code=$(curl -s -o /dev/null -w %{http_code} -H "Host: ${MOODLE_CHECK_HOST}" "${check_moodle_url}")
    if [ $? -ne 0 ] && [[ ! "${MOODLE_CHECK_CODE}" =~ ${status_code} ]] ; then
        echo "$0: CHECK: http status code is ${status_code} and not ${MOODLE_CHECK_CODE//\\|/ or }"
        exit 1
    fi
}

check_php_fpm_socket() {
    # check php-fpm tcp socket
    PHP_FPM_CHECK_SOCKET=${PHP_FPM_CHECK_SOCKET:-$NGINX_FASTCGI_PASS}
    check_socket "${PHP_FPM_CHECK_SOCKET}" "php-fpm"
}

check_nginx_socket() {
    # check database tcp socket
    NGINX_CHECK_SOCKET=${NGINX_CHECK_SOCKET:-127.0.0.1:${NGINX_PORT}}
    check_socket "$NGINX_CHECK_SOCKET" "nginx"
}

while getopts ":lmnprsu" opt; do
  case ${opt} in
    l )
        check_php_fpm_socket
        ;;
    m )
        check_moodledata_readable
        ;;
    n )
        check_nginx_socket
        ;;
    p )
        check_php_fpm_socket
        ;;
    r )
        check_moodledata_readable
        check_php_fpm_socket
        check_nginx_socket
        ;;
    s )
        check_moodledata_readable
        check_nginx_socket
        check_php_fpm_socket
        check_moodle_url
        ;;
    u )
        check_moodle_url
        ;;
    \? )
        usage
        exit
        ;;
  esac
done
shift $((OPTIND -1))

if (( $OPTIND == 1 )); then
    echo -e "No check. Use an option:\n"
    usage
    exit
fi
