#!/bin/bash -eux
# description: create a rootfs using rpms

# release package
## configure repo for release package
mkdir -p /tmp_dnf/{vars,repos,cache}
mkdir -p ${ROOTFS_INSTALL_DIR}
touch /etc/dnf/dnf.conf
cat << _EOF > /tmp_dnf/repos/baseos.repo
[baseos]
name=${ROOTFS_REPO_BASEOS_NAME}
mirrorlist=${ROOTFS_REPO_BASEOS_MIRRORLIST}
gpgcheck=1
enabled=1
countme=1
gpgkey=${ROOTFS_REPO_BASEOS_GPGKEY}
_EOF
## use metalink over mirrorlist, if set
[ -z "${ROOTFS_REPO_BASEOS_METALINK}" ] || sed -i "s@^mirrorlist=.*@metalink=${ROOTFS_REPO_BASEOS_METALINK//&/\\&}@" /tmp_dnf/repos/baseos.repo
for repo_var in $(echo ${ROOTFS_DNF_VARS})
do
    echo "${repo_var##*=}" > "/tmp_dnf/vars/${repo_var%%=*}"
done
## TODO: varsdir seems to be looking inside installroot
cp -rp /tmp_dnf/ ${ROOTFS_INSTALL_DIR}/tmp_dnf

## install release package
microdnf --config /etc/dnf/dnf.conf --refresh --noplugins --nodocs \
    --setopt=cachedir=/tmp_dnf/cache \
    --setopt=varsdir=/tmp_dnf/vars \
    --setopt=reposdir=/tmp_dnf/repos \
    --installroot=${ROOTFS_INSTALL_DIR} \
    --releasever=${ROOTFS_REPO_RELEASEVER} \
    --setopt=tsflags=nodocs \
    --setopt=install_weak_deps=0 \
    install -y ${ROOTFS_RELEASE_PKG}
cp -rp ${ROOTFS_INSTALL_DIR}/etc/pki/rpm-gpg/* /etc/pki/rpm-gpg/

# install other packages
## TODO: varsdir seems to be looking inside installroot, even though ${ROOTFS_INSTALL_DIR} is not prepended when setting its value
if ! [ -z "${ROOTFS_EXTRA_PKGS}" ]; then
    microdnf --config /etc/dnf/dnf.conf --noplugins --nodocs \
        --setopt=cachedir=/tmp_dnf/cache \
        --setopt=varsdir=/etc/dnf/vars \
        --setopt=reposdir=${ROOTFS_INSTALL_DIR}/etc/yum.repos.d \
        --installroot=${ROOTFS_INSTALL_DIR} \
        --releasever=${ROOTFS_REPO_RELEASEVER} \
        --setopt=tsflags=nodocs \
        --setopt=install_weak_deps=0 \
        install -y ${ROOTFS_EXTRA_PKGS}
fi

## TODO: varsdir seems to be looking inside installroot
rm -rf ${ROOTFS_INSTALL_DIR}/tmp_dnf

# post config
pushd ${ROOTFS_INSTALL_DIR}
chroot ${ROOTFS_INSTALL_DIR} rpm --rebuilddb
date +%Y%m%d_%H%M > ${ROOTFS_INSTALL_DIR}/etc/BUILDTIME
echo '%_install_langs C.utf8' > ${ROOTFS_INSTALL_DIR}/etc/rpm/macros.image-language-conf
echo 'LANG="C.utf8"' >  ${ROOTFS_INSTALL_DIR}/etc/locale.conf
echo 'container' > ${ROOTFS_INSTALL_DIR}/etc/dnf/vars/infra
rm -f ${ROOTFS_INSTALL_DIR}/etc/machine-id
touch ${ROOTFS_INSTALL_DIR}/etc/machine-id
chmod 0444 ${ROOTFS_INSTALL_DIR}/etc/machine-id
## extra removal stuff
if [ ! -z ${ROOTFS_EXTRA_REMOVAL} ] && [ "${ROOTFS_EXTRA_REMOVAL,,}" != "false" ]; then
    ## remove some random things
    rm -fv ${ROOTFS_INSTALL_DIR}/usr/share/gnupg/help*.txt
    rm -fv ${ROOTFS_INSTALL_DIR}/usr/lib/rpm/rpm.daily
    ## don't need icons
    rm -rfv ${ROOTFS_INSTALL_DIR}/usr/share/icons/*
    ## remove systemd
    rm -rfv ${ROOTFS_INSTALL_DIR}/usr/lib/systemd
    # reinstall tzdata if to change timezone
    rm -fv ${ROOTFS_INSTALL_DIR}/etc/localtime
    mv ${ROOTFS_INSTALL_DIR}/usr/share/zoneinfo/UTC ${ROOTFS_INSTALL_DIR}/etc/localtime
    rm -rfv  ${ROOTFS_INSTALL_DIR}/usr/share/zoneinfo/*
    mv ${ROOTFS_INSTALL_DIR}/etc/localtime ${ROOTFS_INSTALL_DIR}/usr/share/zoneinfo/UTC
    ln -s /usr/share/zoneinfo/UTC ${ROOTFS_INSTALL_DIR}/etc/localtime
fi
## final clean up
rm -rfv ${ROOTFS_INSTALL_DIR}/etc/udev/hwdb.bin \
    ${ROOTFS_INSTALL_DIR}/usr/lib/udev/hwdb.d/ \
    ${ROOTFS_INSTALL_DIR}/var/lib/dnf/history.* \
    ${ROOTFS_INSTALL_DIR}/var/cache/* \
    ${ROOTFS_INSTALL_DIR}/var/log/* \
    ${ROOTFS_INSTALL_DIR}/tmp/* \
    ${ROOTFS_INSTALL_DIR}/boot ${ROOTFS_INSTALL_DIR}/run/*
mkdir -p ${ROOTFS_INSTALL_DIR}/run/lock
popd
## save pkg_list_linux
chroot ${ROOTFS_INSTALL_DIR} rpm -qa > /pkg_list_${TARGETOS}_${TARGETARCH}
