# {{ ansible_managed  }}
ARG ARG_IMAGE_FROM={{ dockerfile_builder_image_from }}
{% if moodle_app_src is defined %}
FROM ${ARG_IMAGE_FROM} AS app-src

# Component bash variables
ENV GIT_DEST="/opt/app/" \
    APP_DEST=/var/www/html

USER 0
WORKDIR ${GIT_DEST}

# Install deps
COPY conf/usr/bin /usr/bin/
COPY conf/container-entrypoint.d ${CTR_ENTRYPOINT_OPT_PATH}/
RUN install-pkgs git rsync php-json unzip tar && \
    mkdir -p ${GIT_DEST} ${APP_DEST}

# Get source code
# Arguments for moodle git remote, branch and commit
# They are also a mechanism to invalidate cache if changed
ARG ARG_MOODLE_REMOTE="{{ dockerfile_builder_image_git_remote }}"
ARG ARG_MOODLE_BRANCH="{{ moodle_git_branch }}"
ARG ARG_MOODLE_COMMIT="{{ moodle_git_commit }}"
ENV GIT_REMOTE=${ARG_MOODLE_REMOTE} \
    GIT_BRANCH=${ARG_MOODLE_BRANCH} \
    GIT_COMMIT=${ARG_MOODLE_COMMIT}
RUN git clone --branch "${GIT_BRANCH}" --depth 1 \
    "${GIT_REMOTE}" "${GIT_DEST}"

# Verify commit, if any
RUN if [ -n "${GIT_COMMIT}" ]; then app-git -v; fi

# Move src to app destination without .git files
RUN app-git -v -a -e '.git*'

COPY conf/usr/libexec /usr/libexec/

# Install additional plugins (a comma separated arg), if any
# Argument is also a mechanism to invalidate cache if changed
ARG ARG_MOODLE_PLUGIN_LIST="{{ moodle_plugin_list | default([]) | join(',') }}"
ARG ARG_MOODLE_PLUGIN_FORCE="{{ 'true' if moodle_plugin_list | default([], true) else '' }}"
ENV MOODLE_PLUGIN_LIST=${ARG_MOODLE_PLUGIN_LIST} \
    MOODLE_PLUGIN_FORCE=${ARG_MOODLE_PLUGIN_FORCE}
RUN if [ -n "${MOODLE_PLUGIN_LIST}" ]; then /usr/libexec/moodle/install-plugin-list ${MOODLE_PLUGIN_FORCE:+-f} -p "${MOODLE_PLUGIN_LIST}"; fi
{% for plugin in moodle_plugin_tar_gz_url_list | default([]) %}
ADD "{{ plugin.url }}" /tmp/plugin-{{ loop.index }}.tar.gz
RUN mkdir -p "${APP_DEST}/{{ plugin.relpath }}" && \
    tar xz --strip-components=1 -C "${APP_DEST}/{{ plugin.relpath }}" -f /tmp/plugin-{{ loop.index }}.tar.gz
{% endfor %}

{% endif %}
{% if moodle_php_pecl_exts is defined %}
FROM ${ARG_IMAGE_FROM} AS php-exts-builder

USER 0

RUN install-pkgs -e php-pear php-devel make libzstd-devel libsodium-devel
{% if 'redis' in moodle_php_pecl_exts | default([]) %}
# redis
RUN pecl install -D 'enable-redis-igbinary="yes" enable-redis-lzf="yes" enable-redis-zstd="yes"' igbinary redis
RUN chmod 755 /usr/lib64/php/modules/{redis.so,igbinary.so}
{% endif %}
{% if 'sodium' in moodle_php_pecl_exts | default([]) %}
# sodium
RUN pecl install libsodium
RUN chmod 755 /usr/lib64/php/modules/sodium.so
{% endif %}
{% if 'xmlrpc' in moodle_php_pecl_exts | default([]) %}
# xmlrpc is deprecated: https://tracker.moodle.org/browse/MDL-70889
RUN pecl install xmlrpc-beta
RUN chmod 755 /usr/lib64/php/modules/xmlrpc.so
{% endif %}


{% endif %}
FROM ${ARG_IMAGE_FROM}

# General ansible variables
ENV IMAGE_NAME={{ dockerfile_builder_image_name | default('moodle_php-fpm') }} \
    IMAGE_SUMMARY="{{ dockerfile_builder_image_summary | default('PHP ' + php_version + ' for Moodle ' + moodle_version) }}" \
    IMAGE_DESCRIPTION="{{ dockerfile_builder_image_description | default('This ' + dockerfile_builder_image_based + ' based container image runs PHP ' + php_version + ' for Moodle ' + moodle_version) }}" \
    IMAGE_TITLE="{{ dockerfile_builder_image_title | default('PHP ' + php_version + ' for Moodle ' + moodle_version) }}" \
    IMAGE_OC_TAGS="{{ dockerfile_builder_image_ocp_tags | default('${IMAGE_NAME},php,php-fpm,php,moodle,moodle') }}" \
    TZ="{{ dockerfile_builder_image_timezone }}" \
    LANG="en_AU.UTF-8"

# Component bash variables
ENV PHP_MAX_INPUT_VARS=5000 \
    MOODLE_VERSION="{{ moodle_version }}" \
    MOODLE_VERSION_SHORT="{{ moodle_version | replace('.','') }}" \
    MOODLE_APP=${APP_DEST} \
    MOODLE_DATA=/var/moodledata \
    MOODLE_CLI_TOOLS=/usr/libexec/moodle

USER 0

COPY conf/usr/bin /usr/bin/
COPY conf/usr/libexec /usr/libexec/
COPY conf/container-entrypoint.d ${CTR_ENTRYPOINT_OPT_PATH}/
{% if 'redis' in moodle_php_pecl_exts | default([]) %}
COPY --from=php-exts-builder /usr/lib64/php/modules/redis.so /usr/lib64/php/modules/redis.so
COPY --from=php-exts-builder /usr/lib64/php/modules/igbinary.so /usr/lib64/php/modules/igbinary.so
RUN echo "extension = redis.so" > /etc/php.d/50-redis.ini && \
    echo "extension = igbinary.so" > /etc/php.d/40-igbinary.ini
{% endif %}
{% if 'sodium' in moodle_php_pecl_exts | default([]) %}
COPY --from=php-exts-builder /usr/lib64/php/modules/sodium.so /usr/lib64/php/modules/sodium.so
RUN install-pkgs -e libsodium && \
    echo "extension = sodium.so" > /etc/php.d/40-sodium.ini
{% endif %}
{% if 'xmlrpc' in moodle_php_pecl_exts | default([]) %}
# xmlrpc is deprecated: https://tracker.moodle.org/browse/MDL-70889
COPY --from=php-exts-builder /usr/lib64/php/modules/xmlrpc.so /usr/lib64/php/modules/xmlrpc.so
RUN echo "extension = xmlrpc.so" > /etc/php.d/40-xmlrpc.ini
{% endif %}

# Install all locales and timezones
RUN locale-tz-all

# Install dependencies:
# php-curl included in php-common
# php-zip as php-pecl-zip
# php-xsl as php-xml
# php-fpm php-cli php-opcache already installed in base image
# php-pecl-xmlrpc is not required after moodle 4.1
ARG ARG_INSTALL_MOODLE_PHP_PKGS="php-gd php-intl php-ldap php-pgsql php-soap php-xml php-pecl-zip php-mbstring php-json"
ENV INSTALL_MOODLE_PHP_PKGS=${ARG_INSTALL_MOODLE_PHP_PKGS}
RUN install-pkgs -n -e unzip ${INSTALL_MOODLE_PHP_PKGS}

# Install extra packages (a space separated list)
ARG ARG_INSTALL_EXTRA_PKGS="{{ moodle_install_extra_pkgs | default('') }}"
ENV INSTALL_EXTRA_PKGS=${ARG_INSTALL_EXTRA_PKGS}
RUN if [ -n "${INSTALL_EXTRA_PKGS}" ]; then install-pkgs -n -e -r crb ${INSTALL_EXTRA_PKGS}; fi

# Other OS moodle config
RUN container-setup-php-moodle

USER ${CTR_USER_ID}

{% if moodle_app_src is defined %}
ARG ARG_MOODLE_PLUGIN_LIST="{{ moodle_plugin_list | default([]) | join(',') }}"
ARG ARG_MOODLE_REMOTE="{{ dockerfile_builder_image_git_remote }}"
ARG ARG_MOODLE_BRANCH="{{ moodle_git_branch }}"
ARG ARG_MOODLE_COMMIT="{{ moodle_git_commit }}"
ARG ARG_MOODLE_VERSION_NUMBER="{{ moodle_git_source_version_number }}"
ENV MOODLE_REMOTE=${ARG_MOODLE_REMOTE} \
    MOODLE_BRANCH=${ARG_MOODLE_BRANCH} \
    MOODLE_COMMIT=${ARG_MOODLE_COMMIT} \
    MOODLE_VERSION_NUMBER=${ARG_MOODLE_VERSION_NUMBER} \
    MOODLE_PLUGIN_LIST=${ARG_MOODLE_PLUGIN_LIST}

COPY --chown=${CTR_USER_ID}:${CTR_GROUP_ID:-0} --from=app-src {{ moodle_code_copy_path | default('/var/www/html/') }} {{ moodle_code_copy_dest | default('/var/www/html') }}

{% endif %}
# Labels
LABEL name="${IMAGE_NAME}" \
      summary="${IMAGE_SUMMARY}" \
      description="${IMAGE_DESCRIPTION}" \
      maintainer="{{ dockerfile_builder_image_authors }}" \
      org.opencontainers.image.title="${IMAGE_TITLE}" \
      org.opencontainers.image.description="${IMAGE_DESCRIPTION}" \
      org.opencontainers.image.version="{{ dockerfile_builder_image_version }}" \
      io.k8s.description="${IMAGE_DESCRIPTION}" \
      io.k8s.display-name="${IMAGE_TITLE}" \
      io.openshift.tags="${IMAGE_OC_TAGS}"
