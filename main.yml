- hosts: "{{ ctrs_to_build | default(lookup('env','BUILD_CONTAINERS')) | default('all',true) }}"
  connection: local
  vars:
    dockerfile_builder: docker
    dockerfile_builders:
      - podman
      - docker
  serial: "{{ omit if dockerfile_builder not in dockerfile_builders else 1 }}"
  tasks:
    - name: set created time
      when: dockerfile_builder_image_created is not defined
      run_once: true
      set_fact:
        dockerfile_builder_image_created: "{{ lookup('env','IMAGE_CREATED') | default(ansible_date_time.iso8601,true) }}"

    - name: cache from image name if 'cache_from' is true
      when:
        - cache_from | default(lookup('env','BUILD_CACHE_FROM')) | default(false,true)
      block:
      - name: set cache from variable
        with_items: "{{ (dockerfile_builder_cache_from_tags |
          default(dockerfile_builder_tag) | default('latest')).split(',') }}"
        set_fact:
          dockerfile_builder_cache_from:
            "{{ dockerfile_builder_cache_from | default([]) +
            [dockerfile_builder_image + ':' + item] }}"

      - name: set cache build args variables
        set_fact:
          dockerfile_builder_args: "{{  dockerfile_builder_args | default({}) | combine({'BUILDKIT_INLINE_CACHE': 1}) }}"

      - name: pull cache image
        ignore_errors: true
        with_items: "{{ dockerfile_builder_cache_from }}"
        docker_image:
          name: "{{ item }}"
          source: pull

    - name: prepare artifacts for centos8-minimal
      when: ansible_host == 'centos8-minimal'
      docker_container:
        name: rootfs-creator
        image: "{{ rootfs_creator_image | default('krestomatio/rootfs-creator') }}"
        privileged: true
        detach: false
        cleanup: true
        env:
          BUILD_kickstart: centos8-minimal.ks
          BUILD_rootfs: centos8-minimal.tar.xz
        volumes:
          - "{{ playbook_dir }}/{{ src_path }}:/build"

    - name: build containers
      import_role:
        name: dockerfile_builder
