# {{ ansible_managed  }}
{% if moodle_app_copy_from is defined %}
FROM {{ moodle_app_copy_from }} AS app
ENV GIT_COMMIT={{ moodle_git_commit }}
RUN app-git -v -a -e '.git*'

{% endif %}
FROM {{ dockerfile_builder_image_from }}

# General ansible variables
ENV IMAGE_NAME={{ dockerfile_builder_image_name | default('moodle_php-fpm') }} \
    IMAGE_SUMMARY="{{ dockerfile_builder_image_summary | default('PHP $PHP_VERSION for Moodle') }}" \
    IMAGE_DESCRIPTION="{{ dockerfile_builder_image_description | default('This ' + dockerfile_builder_image_based + ' based container image runs PHP ${PHP_VERSION} for Moodle') }}" \
    IMAGE_TITLE="{{ dockerfile_builder_image_title | default('PHP ${PHP_VERSION} for Moodle') }}" \
    IMAGE_OC_TAGS="{{ dockerfile_builder_image_oc_tags | default('${IMAGE_NAME},php,php-fpm,php${PHP_VER_SHORT},php-${PHP_VER_SHORT},moodle,moodle${MOODLE_VER_SHORT},moodle-${MOODLE_VER_SHORT}') }}" \
    TZ="{{ dockerfile_builder_image_timezone }}"

# Component bash variables
ENV MOODLE_VERSION="{{ moodle_version }}" \
    MOODLE_VER_SHORT="{{ moodle_version | replace('.','') }}" \
    MOODLE_APP=${APP_DEST} \
    MOODLE_DATA=/var/moodledata

# php-curl included in php-common
# php-zip as php-pecl-zip
# php-xsl as php-xml
# php-fpm php-cli php-opcache already installed in base image
ENV MOODLE_INSTALL_PHP_PKGS="php-gd php-intl php-ldap php-pgsql php-soap php-xmlrpc php-xml php-pecl-zip php-mbstring php-json"

USER 0

COPY conf/usr/bin/* /usr/bin/
COPY conf/usr/libexec/* /usr/libexec/
COPY conf/container-entrypoint.d/* ${CTR_ENTRYPOINT_OPT_PATH}/

RUN container-setup
RUN install-pkgs ${MOODLE_INSTALL_PHP_PKGS}

{% if moodle_app_copy_from is defined %}
ENV MOODLE_COMMIT="{{ moodle_git_commit }}"

COPY --from=app {{ moodle_code_copy_path | default('/var/www/html') }} {{ moodle_code_copy_dest | default('/var/www/html') }}

{% endif %}
RUN container-setup-php-moodle

USER ${CTR_USER_ID}

# Labels
LABEL name="${IMAGE_NAME}" \
      summary="${IMAGE_SUMMARY}" \
      description="${IMAGE_DESCRIPTION}" \
      maintainer="{{ dockerfile_builder_image_authors }}" \
      org.opencontainers.image.title="${IMAGE_TITLE}" \
      org.opencontainers.image.description="${IMAGE_DESCRIPTION}" \
      org.opencontainers.image.version="{{ dockerfile_builder_image_version }}" \
      io.k8s.description="${IMAGE_DESCRIPTION}" \
      io.k8s.display-name="${IMAGE_TITLE}" \
      io.openshift.tags="${IMAGE_OC_TAGS}"
