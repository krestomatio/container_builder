- name: get semantic version based on git tag
  when:
    - version_git_based | default(true)
  block:
    - name: set image version
      when: version_image_dict is not defined
      vars:
        version_image_bump: patch
      set_fact:
        version_image_dict:  "{{ lookup('git_semver', working_dir, bump=version_image_bump,
          want='dict') }}"

    - name: set major version
      when: version_image_major is not defined and not version_image_major
      set_fact:
        version_image_major: "{{ version_image_dict.major }}"

    - name: set minor version
      when: version_image_minor is not defined and not version_image_minor
      set_fact:
        version_image_minor: "{{ version_image_dict.minor }}"

    - name: set patch version
      when: version_image_patch is not defined and not version_image_patch
      set_fact:
        version_image_patch: "{{ version_image_dict.patch }}"

    - name: set prerelease version
      when: version_image_prerelease is not defined and not version_image_prerelease
      set_fact:
        version_image_prerelease: "{{ version_image_dict.prerelease }}"

    - name: set build version
      when: version_image_build is not defined and not version_image_build
      set_fact:
        version_image_build: "{{ version_image_dict.build }}"

    - name: set full version
      when: version_image_full is not defined and not version_image_full
      set_fact:
        version_image_full: "{{ version_image_major + '.' + version_image_minor + '.' + version_image_patch + ( '-' + version_image_prerelease if version_image_prerelease else '' ) + ( '+' + version_image_build if version_image_build else '' ) }}"

- name: check image version tag does not exist in git repo
  when:
    - version_image_full is defined
    - check_image_version_tag | default(false)
  command: "git tag -l {{ version_image_full }}"
  register: image_version_tag_status
  failed_when: image_version_tag_status.stdout is defined and image_version_tag_status.stdout
  changed_when: false

- name: state image tag
  set_fact:
    state_yml_tag: "{{ version_image_full }}"

- name: set container image version
  when:
    dockerfile_builder_image_version is not defined and
    dockerfile_builder_image_version
  set_fact:
    dockerfile_builder_image_version: "{{ version_image_full }}"

- name: set container image tag based on full version
  set_fact:
    dockerfile_builder_tags: "{{ dockerfile_builder_tags | default([])
      + [version_image_full] }}"

- name: set container image fallback tags
  when: version_include_fallback_tags | default(false)
  block:
    - name: add commit tag
      when: version_commit_tag is defined and version_commit_tag
      set_fact:
        dockerfile_builder_tags: "{{ dockerfile_builder_tags | default([])
          + [version_commit_tag] }}"

    - name: add tags based on commit of version tag
      when: version_image_dict.commit is defined and version_image_dict.commit
      set_fact:
        dockerfile_builder_tags: "{{ dockerfile_builder_tags | default([])
          + [version_image_dict.commit] }}"

    - name: add tags based on branch of version tag
      when: version_image_dict.branch is defined and version_image_dict.branch
      set_fact:
        dockerfile_builder_tags: "{{ dockerfile_builder_tags | default([])
          + [version_image_dict.branch] }}"

    - name: add custom tag
      when: version_custom_tag is defined and version_custom_tag
      set_fact:
        dockerfile_builder_tags: "{{ dockerfile_builder_tags | default([])
          + [version_custom_tag] }}"

- name: set container image tags based on major and minor version
  when:
    - version_include_major_minor_tags | default(false)
  set_fact:
    dockerfile_builder_tags: "{{ dockerfile_builder_tags | default([])
      + [version_image_major + '.' + version_image_minor]
      + [version_image_major] }}"
