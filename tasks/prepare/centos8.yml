- when:
    - ansible_host | regex_search('centos8.*-minimal')
  vars:
    ctr_generated_path: "{{ working_dir }}/{{ generated_path }}"
    ctr_template_path: "{{ working_dir }}/{{ template_path }}"
    pkgs_list_old: "{{ ctr_generated_path }}/pkgs-list"
    pkgs_list_new: "{{ ctr_template_path }}/pkgs-list"
    distro_release_old: "{{ ctr_generated_path }}/distro-release"
    distro_release_new: "{{ ctr_template_path }}/distro-release"
  block:
  - name: check old pkgs total file
    stat:
      path: "{{ pkgs_list_old }}"
    register: centos_pkgs_file_old

  - name: check old distro release file
    stat:
      path: "{{ distro_release_old }}"
    register: centos_distro_release_file_old

  - name: save old pkgs total checksum
    when:
      - centos_pkgs_file_old.stat.exists
    set_fact:
      dockerfile_builder_image_pkgs_checksum: "{{ centos_pkgs_file_old.stat.checksum }}"

  - name: get old distro release
    when:
      - centos_distro_release_file_old.stat.exists
    command: "head -n 1 '{{ distro_release_old }}'"
    changed_when: false
    check_mode: false
    register: centos_distro_release_old

  - name: save old distro release
    when:
      - centos_distro_release_old.stdout | default(false,true)
    set_fact:
      centos_distro_release: "{{ centos_distro_release_old.stdout_lines | first }}"

  - when:
      - not centos8_omit_rootfs_creation | default(false) | bool
        or not centos_pkgs_file_old.stat.exists
        or not centos_distro_release_file_old.stat.exists
    vars:
      rootfs_creator_image: docker.io/krestomatio/rootfs-creator
      rootfs_build_kickstart: "{{ centos8_build_kickstart | default('centos8-minimal.ks') }}"
      rootfs_build_tar: "{{ centos8_build_rootfs | default('centos8-minimal.tar.xz') }}"
    block:
    - name: prepare artifacts
      when:
        - dockerfile_builder == 'docker'
      docker_container:
        name: "rootfs-creator-{{ (ctr_generated_path | to_uuid).split('-')[0] }}"
        image: "{{ rootfs_creator_image }}"
        privileged: true
        detach: false
        cleanup: true
        env:
          BUILD_KICKSTART: "{{ rootfs_build_kickstart }}"
          BUILD_ROOTFS: "{{ rootfs_build_tar }}"
        volumes:
          - "{{ ctr_template_path }}:/build:z"

    - name: prepare artifacts
      when:
        - dockerfile_builder == 'podman'
      changed_when: false
      command: "podman run --privileged --rm -e BUILD_KICKSTART='{{ rootfs_build_kickstart }}'
        -e BUILD_ROOTFS='{{ rootfs_build_tar }}'
        -v '{{ ctr_template_path }}:/build:z' {{ rootfs_creator_image }}
        --name rootfs-creator-{{ (ctr_generated_path | to_uuid).split('-')[0] }}
        {{ rootfs_build_kickstart }} {{ rootfs_build_tar }}"

    - name: get new pkgs total checksum
      stat:
        path: "{{ pkgs_list_new }}"
      register: centos_pkgs_file_new
      when: not ansible_check_mode
      failed_when:
        - not centos_pkgs_file_new.stat.exists

    - name: save new pkgs total checksum
      when:
        - centos_pkgs_file_new.stat is defined
        - centos_pkgs_file_new.stat.exists
      set_fact:
        dockerfile_builder_image_pkgs_checksum: "{{ centos_pkgs_file_new.stat.checksum }}"

    - name: get new distro release
      command: "head -n 1 '{{ distro_release_new }}'"
      changed_when: false
      when: not ansible_check_mode
      register: centos_distro_release_new

    - name: save new distro release
      when:
        - centos_distro_release_new.stdout | default(false,true)
      set_fact:
        centos_distro_release: "{{ centos_distro_release_new.stdout_lines | first }}"

  - name: set version based on distro-release
    when:
      - centos_distro_release is defined
      - dockerfile_builder_image_pkgs_checksum is defined
    set_fact:
      version_image_major: "{{ centos_distro_release.split('.')[0].split('-')[2] }}"
      version_image_minor: "{{ centos_distro_release.split('.')[1].split('-')[0] }}"
      version_image_full:
        "{{ centos_distro_release.split('.')[0].split('-')[2] + '.' + centos_distro_release.split('.')[1].split('-')[0] + '.' +
        centos_distro_release.split('.')[2] + '-' +
        dockerfile_builder_image_pkgs_checksum[:6] }}"

  - name: omit src sync when no new pkgs
    when:
      - centos_pkgs_file_old.stat is defined
      - centos_pkgs_file_new.stat is defined
      - centos_pkgs_file_old.stat.exists
      - centos_pkgs_file_new.stat.exists
      - centos_pkgs_file_new.stat.checksum == centos_pkgs_file_old.stat.checksum
    set_fact:
      dockerfile_builder_src_omit: true

  - name: omit src sync when no new pkgs list in place
    when:
      - centos_pkgs_file_new.stat is not defined or
        not centos_pkgs_file_new.stat.exists
    set_fact:
      dockerfile_builder_src_omit: true
